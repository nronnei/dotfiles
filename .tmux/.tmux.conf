set-option -g default-terminal "xterm-256color"
set-option -g repeat-time 0

# SSH stuffz - http://superuser.com/questions/237822/how-can-i-get-ssh-agent-working-over-ssh-and-in-tmux-on-os-x
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-Space
bind-key C-Space last-window

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

set -g display-time 2000

# Set status bar
#set -g status-bg black
set -g status-style fg=white,bg=default
set -g status-left ""
set -g status-right-length 200
# Replaced black with default for transparency
set -g status-right "#[fg=colour33]#(~/dotfiles/.tmux/scripts/music/get_music_universal.sh)\
 #[fg=default]#[bg=default] #(cd #{pane_current_path}; ~/dotfiles/.tmux/scripts/git/branch-and-status.sh)\
 #[bg=default]#[fg=green] #h #[fg=colour214]#(date '+%a %b %e %Y')\
 #[fg=colour50]#(~/dotfiles/.tmux/scripts/time/eastern.sh) EDT\
 #[fg=colour184]#(~/dotfiles/.tmux/scripts/sysstats/load_average_universal.sh)"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# More history
set -g history-limit 100000

# Mouse 
set -g mouse on
# Workaround from tmux 2.0 -> 2.1 upgrade changes
# https://github.com/tmux/tmux/issues/145
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Use vim keybindings in copy mode
setw -g mode-keys vi
set-option -s set-clipboard off

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -sel clip -i"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -sel clip -i"


# # Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "xclip -i -sel clip"

# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "xclip -i -sel clip"


# Bind ']' to use pbpaste
bind ] run "~/dotfiles/.tmux/scripts/clipboard/paste.sh"

############################

#update status bar every 5 seconds
set -g status-interval 5

# Highlight active window
set-window-option -g window-status-current-style bg=colour88

# use PREFIX / to split window horizontally and PREFIX - to split vertically

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Force new windows to start at ~/Code
#unbind c
#bind c new-window -c "$HOME/Code"

# Reload on r
bind r source-file ~/.tmux.conf

# Sync on S
bind S set-window-option synchronize-panes 

# Remove annoying mistype
unbind Space

# This stops "garbage characters" from getting printed on copy selections
set -g set-clipboard off

# Ensure start with default shell on mac# Ensure start with default shell on mac
set-option -g default-command "~/dotfiles/.tmux/safe-reattach-to-user-namespace -l $SHELL"
